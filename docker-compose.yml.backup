services:
  web:
    build: .
    ports:
      - "5150:5150"  # Map port 5150 for the Flask app
    volumes:
      - .:/app
      - ./configs:/app/configs
      - ./terraform:/app/terraform
      - ./users.json:/app/users.json
      - ./vm-workspace:/app/vm-workspace
    environment:
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-change_this_to_a_random_secure_key}
      - CONFIG_DIR=/app/configs
      - TERRAFORM_DIR=/app/terraform
      - USERS_FILE=/app/users.json
      - DEBUG=True
      # Atlantis integration
      - ATLANTIS_URL=http://atlantis:4141
      - ATLANTIS_TOKEN=${ATLANTIS_TOKEN:-your-atlantis-api-secret}
      - TIMEOUT=120
      # VSphere connection
      - VSPHERE_USER=${VSPHERE_USER:-vsphere-username}
      - VSPHERE_PASSWORD=${VSPHERE_PASSWORD:-vsphere-password}
      - VSPHERE_SERVER=${VSPHERE_SERVER:-vsphere-server}
      - VSPHERE_ALLOW_UNVERIFIED_SSL=true # Allow unverified SSL for vSphere
      # NetBox integration
      - NETBOX_TOKEN=${NETBOX_TOKEN:-netbox-api-token}
      - NETBOX_URL=${NETBOX_URL:-https://netbox.example.com/api}
      - NETBOX_ALLOW_UNVERIFIED_SSL=true # Allow unverified SSL for Netbox
    depends_on:
      - atlantis
      - redis # Add redis dependency
    user: root # Add this line
    networks:
      - app-network
    command: ["gunicorn", "-w", "1", "-b", "0.0.0.0:5150", "--timeout", "600", "app:app"] # Increase timeout to 600s
    restart: unless-stopped

  atlantis:
    image: ghcr.io/runatlantis/atlantis:latest
    ports:
      - "4141:4141"
    environment:
      - ATLANTIS_PORT=4141
      - ATLANTIS_ATLANTIS_URL=http://atlantis:4141
      # Local file mode configuration
      - ATLANTIS_REPO_ALLOWLIST=*
      - ATLANTIS_ENABLE_POLICY_CHECKS=false
      - ATLANTIS_AUTOPLAN_FILE_LIST=*.tf,*.tfvars
      - ATLANTIS_WRITE_GIT_CREDS=false
      - ATLANTIS_REPO_CONFIG=/etc/atlantis/repo-config.yaml
      - ATLANTIS_API_SECRET=${ATLANTIS_TOKEN:-your-atlantis-api-secret}
      # GitHub settings (dummy values for file mode)
      - ATLANTIS_GH_USER=fake
      - ATLANTIS_GH_TOKEN=fake
      # File mode configuration
      - ATLANTIS_ALLOW_REPO_CONFIG=true
      - ATLANTIS_ENABLE_DIFF_MARKDOWN_FORMAT=true
      - ATLANTIS_HIDE_PREV_PLAN_COMMENTS=true
      - ATLANTIS_WRITE_MODE=file
      # Project directory configuration
      - ATLANTIS_DATA_DIR=/tmp
      - ATLANTIS_PROJECT_DIR=/terraform
      - ATLANTIS_DEFAULT_TF_VERSION=1.0.0
      # VSphere connection for Terraform
      - VSPHERE_USER=${VSPHERE_USER:-vsphere-username}
      - VSPHERE_PASSWORD=${VSPHERE_PASSWORD:-vsphere-password}
      - VSPHERE_SERVER=${VSPHERE_SERVER:-vsphere-server}
      # NetBox integration
      - NETBOX_TOKEN=${NETBOX_TOKEN:-netbox-api-token}
      - NETBOX_URL=${NETBOX_URL:-https://netbox.example.com/api}
    command: [
      "server", 
      "--disable-repo-locking", 
      "--repo-config=/etc/atlantis/repo-config.yaml", 
      "--atlantis-url=http://atlantis:4141", 
      "--gh-user=fake",
      "--gh-token=fake",
      "--repo-allowlist=*",
      "--web-basic-auth=false",
      "--tf-download=true"
    ]
    volumes:
      - ./atlantis-config:/etc/atlantis
      - ./terraform:/terraform
    user: root
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: ssb-redis # Optional: give it a specific container name
    ports:
      - "6379:6379" # Expose Redis port if needed externally
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - redis_data:/data # Mount persistent volume to Redis data directory
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  configs:
  terraform:
  atlantis-data:
  redis_data: # Volume for persistent Redis data
