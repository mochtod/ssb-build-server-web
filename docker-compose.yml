services:
  web:
    build: .
    ports:
      - "5150:5150"  # Map port 5150 for the Flask app
    volumes:
      # Mount only specific files/directories instead of the entire app directory
      - ./configs:/app/configs
      - ./terraform:/app/terraform
      - ./users.json:/app/users.json
      # For development, you can uncomment below to enable hot-reloading of code changes
      # - ./app.py:/app/app.py
      # - ./vsphere_redis_cache.py:/app/vsphere_redis_cache.py
      # - ./redis_client.py:/app/redis_client.py
      # - ./templates:/app/templates
      # - ./static:/app/static
    environment:
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-change_this_to_a_random_secure_key}
      - CONFIG_DIR=/app/configs
      - TERRAFORM_DIR=/app/terraform
      - USERS_FILE=/app/users.json
      - DEBUG=True
      # Atlantis integration
      - ATLANTIS_URL=http://atlantis:4141
      - ATLANTIS_TOKEN=${ATLANTIS_TOKEN:-your-atlantis-api-secret}
      - TIMEOUT=120
      # Redis integration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_CACHE_TTL=${REDIS_CACHE_TTL:-3600}
    depends_on:
      - atlantis
      - redis
    networks:
      - app-network
    restart: unless-stopped

  atlantis:
    image: ghcr.io/runatlantis/atlantis:latest
    ports:
      - "4141:4141"
    environment:
      - ATLANTIS_PORT=4141
      - ATLANTIS_ATLANTIS_URL=http://atlantis:4141
      # GitHub repository configuration
      - ATLANTIS_REPO_ALLOWLIST=github.com/${GITHUB_USER:-your-username}/*
      - ATLANTIS_ENABLE_POLICY_CHECKS=false
      - ATLANTIS_AUTOPLAN_FILE_LIST=*.tf,*.tfvars
      - ATLANTIS_WRITE_GIT_CREDS=true
      - ATLANTIS_REPO_CONFIG=/etc/atlantis/repo-config.yaml
      - ATLANTIS_API_SECRET=${ATLANTIS_TOKEN:-your-atlantis-api-secret}
      # GitHub webhook configuration
      - ATLANTIS_GH_WEBHOOK_SECRET=${GH_WEBHOOK_SECRET:-your-webhook-secret}
      # GitHub authentication
      - ATLANTIS_GH_USER=${GITHUB_USER:-your-github-username}
      - ATLANTIS_GH_TOKEN=${GITHUB_TOKEN:-your-github-personal-access-token}
      # Additional configuration
      - ATLANTIS_ALLOW_REPO_CONFIG=true
      - ATLANTIS_ENABLE_DIFF_MARKDOWN_FORMAT=true
      - ATLANTIS_HIDE_PREV_PLAN_COMMENTS=true
      # Project directory configuration
      - ATLANTIS_DATA_DIR=/tmp
      - ATLANTIS_PROJECT_DIR=/terraform
      - ATLANTIS_DEFAULT_TF_VERSION=1.0.0
    command: [
      "server", 
      "--disable-repo-locking", 
      "--repo-config=/etc/atlantis/repo-config.yaml", 
      "--atlantis-url=http://atlantis:4141", 
      "--gh-user=${GITHUB_USER:-your-github-username}",
      "--gh-token=${GITHUB_TOKEN:-your-github-personal-access-token}",
      "--repo-allowlist=github.com/${GITHUB_USER:-your-username}/*",
      "--web-basic-auth=false",
      "--tf-download=true"
    ]
    volumes:
      - ./atlantis-config:/etc/atlantis
      - ./terraform:/terraform
    user: root
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network

  vsphere-sync:
    build: .
    command: python /app/vsphere_sync_scheduler.py
    volumes:
      # Use specific volume mounts instead of mounting the entire directory
      - ./configs:/app/configs
      - ./terraform:/app/terraform
    environment:
      # vSphere connection settings
      - VSPHERE_SERVER=${VSPHERE_SERVER}
      - VSPHERE_USER=${VSPHERE_USER}
      - VSPHERE_PASSWORD=${VSPHERE_PASSWORD}
      - VSPHERE_PORT=${VSPHERE_PORT:-443}
      - VSPHERE_USE_SSL=${VSPHERE_USE_SSL:-true}
      # Redis connection settings
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_CACHE_TTL=${REDIS_CACHE_TTL:-3600}
      # Sync settings
      - VSPHERE_SYNC_INTERVAL_MINUTES=${VSPHERE_SYNC_INTERVAL_MINUTES:-15}
      - VSPHERE_CACHE_TTL=${VSPHERE_CACHE_TTL:-3600}
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  configs:
  terraform:
  atlantis-data:
  redis-data:  # Persistent storage for Redis data
